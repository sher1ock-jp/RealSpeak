name: "Terraform - Prod Environment"

on:
  push:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "sher1ock"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "realspeak-prod"
  CONFIG_DIRECTORY: "./infra/terraform"
  TF_VAR_environment: "prod"
  TF_VAR_project_id: "${{ secrets.GCP_PROJECT_ID_PROD }}"

jobs:
  terraform:
    name: "Terraform Prod"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_PROD }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -var="environment=prod" -var="project_id=${{ secrets.GCP_PROJECT_ID_PROD }}"
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_PROD }}

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var="environment=prod" -var="project_id=${{ secrets.GCP_PROJECT_ID_PROD }}"
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_PROD }}
